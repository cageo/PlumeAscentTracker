function define_varCharact


%% TRACKED FEATURES (to be plotted on img)
%  "trackedFeatures" = n x m cell array, where:
%     n = nber of tracked features
%     m = tracked features characteristics:
%       1. feat_nameGUI      = feature name appearing in GUI
%       2. feat_nameVarX     = expression to collect X values
%           nb: idxLine = line index in data vector, each line holding the data values for 1 frame
%       3. feat_nameVarY     = expression to collect Y values
%       4. feat_lineStyle    = line style when plotted
%       5. feat_color        = color when plotted
%       6. feat_marker       = marker when plotted
%       7. feat_legTxt       = legend text when plotted (='displayName' property)
%       8. feat_parentOperation = operation which led to the creation of the feature (ex: imgFiltering, featureFitting, ...)
% 
% NB: several elts to plot can be introduced within a unique trackedFeature (i.e. unique 'feat_nameGUI')
%   ex: plot contour & px in coutour used to compute plume centroid:
%       trackedFeatures(1,:)={...
%           'plume_pxANDcontour',...    % feature name appearing in GUI
%           {'pxX';'contourX'},...      % X expression to collect pxX; contourX
%           {'pxY';'contourY'},...      % Y expression to collect pxY; contourY
%           {'none';'-'},...            % lineStyle
%           {'w';'r'},...               % color
%           {'.';'none'},...            % marker
%           {'pixels';'contour)'}};     % legendTxt
% 
%    nb: if a characteristic is common to all the elts to plot, no need to repeat it's expression: 
%        ex: if both elts white, cell {'w';'w'} in trackedFeatures can be replaced by 'w' 

trackedFeatures={};

%--- plume pixels (interaction between filters)
trackedFeatures(size(trackedFeatures,1)+1,:)={...
    'plumePixels',...
    'plumeInfo_pxX','plumeInfo_pxY',...
    'none','y','.',... %feature symbol = lineStyle-color-marker (ordered like '-b.')
    'plumePixels',...
    'imgFiltering'};

%--- plume CONTOUR
%- plume contour pixels (home-made)
trackedFeatures(size(trackedFeatures,1)+1,:)={...
    'plumeContour_px',...
    'plumeInfo_contour_pxX{idxLine}','plumeInfo_contour_pxY{idxLine}',...
    'none',[0.5,0.5,0.5],'.',...
    'contourPixels',...
    'imgFiltering'};
%- plume contour (mtlb) (=largest contour identified)
trackedFeatures(size(trackedFeatures,1)+1,:)={...
    'plumeContour_mtlb',...
    'plumeInfo_largestContourXY_mtlb{idxLine}(1,:)','plumeInfo_largestContourXY_mtlb{idxLine}(2,:)',...
    '-','g','none',...
    'largest contour identified (mtlb fcn)',...
    'imgFiltering'};

%--- plume TOP
%-- plume top (absolute) pixel
trackedFeatures(size(trackedFeatures,1)+1,:)={...
    'plumeTop',...
    'plumeInfo_top_pxX(idxLine)','plumeInfo_top_pxY(idxLine)',...
    'none','g','+',...
    'plumeTop px',...
    'imgFiltering'};

%-- plume top (mean) pixel
%- mean value
trackedFeatures(size(trackedFeatures,1)+1,:)={...
    'plumeTop_mean',...
    'plumeInfo_topMean_pxXY{idxLine}(1)','plumeInfo_topMean_pxXY{idxLine}(2)',...
    'none','g','x',...
    'plumeTop\_mean',...
    'imgFiltering'};
%- pixel used
trackedFeatures(size(trackedFeatures,1)+1,:)={...
    'plumeTop_mean_pxUsed',...
    'plumeInfo_topMean_pxXused{idxLine}','plumeInfo_topMean_pxYused{idxLine}',...
    'none','m','.',...
    'plumeTop\_mean (px used)',...
    'imgFiltering'};

%--- plume CENTROID
%- cendroid (mean XY of the plume px held in largest closed contour)
trackedFeatures(size(trackedFeatures,1)+1,:)={...
    'plumeCentroid',...
    'plumeInfo_centroidXY{idxLine}(1)','plumeInfo_centroidXY{idxLine}(2)',...
    'none','m','x',...
    'plume centeroid (mean XY of the plume px held in largest closed contour)',...
    'imgFiltering'};
%- contour & px in coutour used to compute plume centroid
trackedFeatures(size(trackedFeatures,1)+1,:)={...
    'plumeCentroid_pxUsed',...
    {'plumeInfo_largestContourPxX_used2getCentroid{idxLine}';'plumeInfo_largestContourXY_used2getCentroid{idxLine}(1,:)'},...   %X: pxX; contourX
    {'plumeInfo_largestContourPxY_used2getCentroid{idxLine}';'plumeInfo_largestContourXY_used2getCentroid{idxLine}(2,:)'},...   %Y: pxY; contourY
    {'none';'-'},{'w';'r'},{'.';'none'},...
    {'pixels in plumeInfo_largestContourPxX_used2getCentroid';'largest contour used to get plume center (built from plumePixels\_contour)'},...
    'imgFiltering'};

%--- plume diameter MAX
%- max
trackedFeatures(size(trackedFeatures,1)+1,:)={...
    'plumeDiameter_max',...
    'plumeInfo_radMax_pxXEdge{idxLine}','plumeInfo_radMax_pxYEdge{idxLine}',...
    ':','m','none',...
    'max plume radius',...
    'imgFiltering'};
%- mean (plotted with center chosen arbitrarily at centroid position)
trackedFeatures(size(trackedFeatures,1)+1,:)={...
    'plumeDiameter_mean',...
    '[plumeInfo_centroidXY{idxLine}(1)-plumeInfo_radMean_px(idxLine); plumeInfo_centroidXY{idxLine}(1)+plumeInfo_radMean_px(idxLine)]','[plumeInfo_centroidXY{idxLine}(2), plumeInfo_centroidXY{idxLine}(2)]',...
    '-','k','none',...
    'mean plume radius',...
    'imgFiltering'};
%- centroid
trackedFeatures(size(trackedFeatures,1)+1,:)={...
    'plumeDiameter_centroid',...
    'plumeInfo_radCent_pxXEdge{idxLine}','plumeInfo_radCent_pxYEdge{idxLine}',...
    '-','w','none',...
    'centroid plume diameter',...
    'imgFiltering'};

%--- plume edges (left; righ; middle)
trackedFeatures(size(trackedFeatures,1)+1,:)={...
    'plumeEdge',...
    {'plumeInfo_plumeEdges_pxX{idxLine}(:,1)';'plumeInfo_plumeEdges_pxX{idxLine}(:,2)';'plumeInfo_plumeMiddles_pxXY{idxLine}(:,1)'},... %X: pxLeft, pxRight, pxCenter
    {'plumeInfo_plumeEdges_pxY{idxLine}(:,1)';'plumeInfo_plumeEdges_pxY{idxLine}(:,2)';'plumeInfo_plumeMiddles_pxXY{idxLine}(:,2)'},... %Y: pxLeft, pxRight, pxCenter
    'none',{'r';'g';'k'},'.',...
    {'plumeEdge left';'plumeEdge right';'plumeEdge middle'},...
    'imgFiltering'};

%--- plume feature fit
trackedFeatures(size(trackedFeatures,1)+1,:)={...
    'fit_polynomialCurve',...
    'xFit','yFit',...
    'none','m','.',...
    'fit',...
    'fitFeature'};

%--- axial profile
trackedFeatures(size(trackedFeatures,1)+1,:)={...
    'profile_lines',...
    'prof_axisPxX','prof_axisPxY',...
    '-','c','none',...
    'profile',...
    'getProfile'};

%--- axial profile pixels
trackedFeatures(size(trackedFeatures,1)+1,:)={...
    'profile_pxSelected',...
    'prof_pxX','prof_pxY',...
    'none','g','.',...
    'profile',...
    'getProfile'};

%--- axial profile center pixels
trackedFeatures(size(trackedFeatures,1)+1,:)={...
    'profile_pxCenter',...
    'prof_center_pxX','prof_center_pxY',...
    'none','m','x',...
    'profile',...
    'getProfile'};


feat_nameGUI = trackedFeatures(:,1);
feat_nameVarX = trackedFeatures(:,2);
feat_nameVarY = trackedFeatures(:,3);
feat_lineStyle = trackedFeatures(:,4);
feat_color = trackedFeatures(:,5);
feat_marker = trackedFeatures(:,6);
feat_legTxt = trackedFeatures(:,7);
feat_parentOp = trackedFeatures(:,8);


%% other options to be plotted:

% imgRaw_celsius
% imgRaw_kelvin
% imgDiff_frameRef
% imgDiff_framePrev
% regionTracked
% filterTemp_px




%% EXPORT VARIABLES
var2export = who;
for i=1:numel(var2export)
    assignin('caller',var2export{i},eval(var2export{i}));
end
